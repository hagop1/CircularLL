public class DoublyLinkedList
{
	public Node h; //head
	public Node t; //tail
	public int size;
	
	public DoublyLinkedList()
	{
		h = null;
		t = null;
		size = 0;
	}
	
	public boolean isEmpty()
	{
		if(h == null)
		{
			return true;		
		}
		else
		{
			return false;
		}
	}
	
	public void insertAtFront(int data)
	{
		Node newNode = new Node(data);
		if(isEmpty())
		{
			newNode.next = h;
			newNode.prev = t;
			h = newNode;
			t = newNode;
			size++;
		}
		else
		{
			newNode.next = h;
			newNode.prev = t;
			h.prev = newNode;
			t.next = newNode;
			h = newNode;
			size++;
		}
	}
	
	public void insertAt(int data, int pos)
	{
		if(pos > size)
		{
			System.out.println("Error");
			return;
		}
		Node newNode = new Node(data);
		if(isEmpty())
		{
			insertAtFront(data);
			System.out.println("Error can't insert at End.");
		}
		else
		{
			Node temp = h;
			for(int i = 0; i < pos; i++)
			{
				temp = temp.next;
			}
			newNode.prev = temp.prev;
			temp.prev.next = newNode;
			newNode.next = temp;
			temp.prev = newNode;
		}
	}
	
	public void insertAtEnd(int data)
	{
		Node newNode = new Node(data);
		if(isEmpty())
		{
			insertAtFront(data);
			System.out.println("Error can't insert at End.");
		}
		else
		{
			newNode.next = h;
			newNode.prev = t;
			h.prev = newNode;
			t.next = newNode;
			h = newNode;
			size++;
		}
	}
	public void removeAtFront()
	{
		if(isEmpty())
		{
			return;
		}
		else
		{
			Node temp = h;
			h = temp.next;
			h.prev = t;
			t.next = h;
			size--;
		}
	}
	public void removeAt(int pos)
	{
		if(pos > size || isEmpty())
			return;
			Node temp = h;
			for(int i = 0; i < pos; i++)
			
			{
				temp = temp.next;
				
			}
			temp.next.prev = temp.next;
			temp.prev.next = temp.next;
			size--;
	} 
	
	public void removeAtEnd()
	{
		if(isEmpty())
		{
			return;
		}
		else
		{
			Node temp = t;
			t = temp.prev;
			h.prev = t;
			t.next = h;
			size--;
		}
	}
	
	public void printLL()
	{
		Node temp = h;
		for(int i = 0; i < size; i++)
		{
			System.out.println(temp.data + " ");
			temp = temp.next;
		}
	}
	 public static void main(String args[])
	 {
		 
	 }
	
}

